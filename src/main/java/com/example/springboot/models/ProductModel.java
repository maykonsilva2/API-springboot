package com.example.springboot.models;

import jakarta.persistence.*;
//These are import instructions. They allow you to use the @Entity and @Table annotations from the Jakarta Persistence
// specification (formerly known as the Java Persistence API or JPA). These annotations are used to map this class to a
// table in a database.

import java.io.Serializable;

//The Serializable interface is a marker (that is, it has no methods), which tells Java that objects of this class can
// be converted into a sequence of bytes. This is useful for serializing an object, which means writing it to a file,
// sending it over a network, or simply storing it for later use.
import java.math.BigDecimal;
import java.util.UUID;

@Entity // indicates that this class is a JPA entity, which wll be mapped to a table in the database.
@Table(name="TB_PRODUCTS") //Name of Table
public class ProductModel implements Serializable {
    private static final long serialVersionUID = 1L; //is a unique serializable class identifier. If you change the class in any way (e.g. by adding new fields), deserialization may fail if you do not update the serialVersionUID (e.g. if you add a new field in the class with `private int ano; ` change the `serialVersionUID` to 2L...3L...4L)

    @Id // marks the `idProduct` field as the entity's primary key
    @GeneratedValue(strategy= GenerationType.AUTO) // indicates that the annotated field value should be automatically generated by the persistence provider. This means that when a new object is created and persisted in the database, the value of this field will be automatically generated without needing to be set manually.
    private UUID idProduct; // UUID generates unique identifiers
    private String name;
    private BigDecimal value;

    public UUID getIdProduct() {
        return idProduct;
    }

    public void setIdProduct(UUID idProduct) {
        this.idProduct = idProduct;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public BigDecimal getValue() {
        return value;
    }

    public void setValue(BigDecimal value) {
        this.value = value;
    }
}
